! menu.ConsoleUserCommunicator.java

# Important values for code

!Variables understandable for program
!Change only if appropriate classes modified (Student.java, Group.java)

#Group

#group_name
consoleUserCommunicator.group_name0 = ALG|DS|ANL
consoleUserCommunicator.group_name1 = ALG
consoleUserCommunicator.group_name2 = DS
consoleUserCommunicator.group_name3 = ANL

#Student

#gender
consoleUserCommunicator.gender0 = MALE|FEMALE
consoleUserCommunicator.gender1 = MALE
consoleUserCommunicator.gender2 = FEMALE

#type_of_contract
consoleUserCommunicator.type_of_contract0 = STIPEND|PAYABLE
consoleUserCommunicator.type_of_contract1 = STIPEND
consoleUserCommunicator.type_of_contract2 = PAYABLE

#type_of_studying
    consoleUserCommunicator.type_of_studying0 = PRESENT|ONLINE
consoleUserCommunicator.type_of_studying1 = PRESENT
consoleUserCommunicator.type_of_studying2 = ONLINE

# System comments

#starting comments
consoleUserCommunicator.choose_option = Choose one of the options
consoleUserCommunicator.option_number = Option number: 
consoleUserCommunicator.option_number_regex = \\d+

#naming all the options
consoleUserCommunicator.op0 =  : end
consoleUserCommunicator.op1 = 1 : get all students
consoleUserCommunicator.op2 = 2 : get all groups
consoleUserCommunicator.op3 = 3 : get student by id
consoleUserCommunicator.op4 = 4 : get group by id
consoleUserCommunicator.op5 = 5 : add student
consoleUserCommunicator.op6 = 6 : add group
consoleUserCommunicator.op7 = 7 : update student
consoleUserCommunicator.op8 = 8 : update group
consoleUserCommunicator.op9 = 9 : delete student
consoleUserCommunicator.op10 = 10 : delete group
consoleUserCommunicator.op11 = 11 : check if student exist in database
consoleUserCommunicator.op12 = 12 : get all students in group
consoleUserCommunicator.op13 = 13 : get attendees in group
consoleUserCommunicator.op14 = 14 : get online students in group
consoleUserCommunicator.op15 = 15 : get all attendees (students with type of studying: present)
consoleUserCommunicator.op16 = 16 : get all online students
consoleUserCommunicator.op17 = 17 : get all stipends
consoleUserCommunicator.op18 = 18 : get all students with type of contract: payable
consoleUserCommunicator.op19 = 19 : get all male students
consoleUserCommunicator.op20 = 20 : get all female students
consoleUserCommunicator.op21 = 21 : get all groups by language
consoleUserCommunicator.op22 = 22 : get all groups with online access
consoleUserCommunicator.op23 = 23 : get full groups
consoleUserCommunicator.op24 = 24 : get all groups with same name

#system comments
consoleUserCommunicator.command_not_found = Command not found. 
consoleUserCommunicator.do_not_exist = do not exist. 
consoleUserCommunicator.forbidden_input = Forbidden input. To close request leave the field blank. 
consoleUserCommunicator.input_interrupted = Input is interrupted. 

consoleUserCommunicator.nothing_deleted = Nothing will be deleted. 

#separate comments about student
consoleUserCommunicator.student_with_id = Student with id: 
consoleUserCommunicator.student_input_interrupted = Input of student data is interrupted. 
consoleUserCommunicator.student_addition_denied = Student addition is denied. 
consoleUserCommunicator.student_update_denied = Student update is denied. 

#separate comments about group
consoleUserCommunicator.group_with_id = Group with id: 
consoleUserCommunicator.groups_with_language = All groups with language: 
consoleUserCommunicator.groups_with_name = All groups with name: 
consoleUserCommunicator.group_input_interrupted = Input of group data is interrupted. 
consoleUserCommunicator.group_addition_denied = Group addition is denied. 
consoleUserCommunicator.group_update_denied = Group update is denied. 

# System Headers

#main
consoleUserCommunicator.system_request = SYSTEM_REQUEST
consoleUserCommunicator.options = OPTIONS
consoleUserCommunicator.error = ERROR
consoleUserCommunicator.end = END
consoleUserCommunicator.true = TRUE
consoleUserCommunicator.false = FALSE

#forOptions
consoleUserCommunicator.all_students = ALL_STUDENTS
consoleUserCommunicator.all_groups = ALL_GROUPS
consoleUserCommunicator.all_attendees_students = ALL_ATTENDEES_STUDENTS
consoleUserCommunicator.all_online_students = ALL_ONLINE_STUDENTS
consoleUserCommunicator.all_stipends = ALL_STIPENDS
consoleUserCommunicator.all_with_payable_contract = ALL_WITH_PAYABLE_CONTRACT
consoleUserCommunicator.all_male_students = ALL_MALE_STUDENTS
consoleUserCommunicator.all_female_students = ALL_FEMALE_STUDENTS
consoleUserCommunicator.all_groups_with_online_access = ALL_GROUPS_WITH_ONLINE_ACCESS
consoleUserCommunicator.all_full_groups = ALL_FULL_GROUPS
consoleUserCommunicator.get_student_by_id = GET_STUDENT_BY_ID
consoleUserCommunicator.get_group_by_id = GET_GROUP_BY_ID
consoleUserCommunicator.add_student = ADD_STUDENT
consoleUserCommunicator.add_group = ADD_GROUP
consoleUserCommunicator.update_student = UPDATE_STUDENT
consoleUserCommunicator.update_group = UPDATE_GROUP
consoleUserCommunicator.delete_student = DELETE_STUDENT
consoleUserCommunicator.delete_group = DELETE_GROUP
consoleUserCommunicator.student_exist = STUDENT_EXIST
consoleUserCommunicator.get_all_students_in_group = GET_ALL_STUDENTS_IN_GROUP
consoleUserCommunicator.get_attendees_in_group = GET_ATTENDEES_IN_GROUP
consoleUserCommunicator.get_online_students_in_group = GET_ONLINE_STUDENTS_IN_GROUP
consoleUserCommunicator.find_all_groups_by_language = FIND_ALL_GROUPS_BY_LANGUAGE
consoleUserCommunicator.find_all_groups_with_same_name = FIND_ALL_GROUPS_WITH_SAME_NAME

# Group

consoleUserCommunicator.group_id = Group ID: 
consoleUserCommunicator.group_id_regex = \\d+
consoleUserCommunicator.group_name = Group name: 
consoleUserCommunicator.group_name_regex = alg|ds|anl
consoleUserCommunicator.online_access = Online access: 
consoleUserCommunicator.online_access_regex = true|false
consoleUserCommunicator.language = Language: 
consoleUserCommunicator.language_regex = [a-zA-Z]+
consoleUserCommunicator.max_attendees = Max Attendees (present): 
consoleUserCommunicator.max_attendees_regex = [0-9]+

#about students in group
consoleUserCommunicator.students = All students in group 
consoleUserCommunicator.attendees = Attendees in group 
consoleUserCommunicator.online_students = Online students in group 

#responsible for group bundle
consoleUserCommunicator.responsible_for_group = Responsible for group
consoleUserCommunicator.resp_name = Name: 
consoleUserCommunicator.resp_name_regex = ([a-zA-Z]|\\p{Blank}|'|´)+
consoleUserCommunicator.resp_surname = Surname: 
consoleUserCommunicator.resp_surname_regex = ([a-zA-Z]|\\p{Blank}|'|´)+

consoleUserCommunicator.contact_information = Contact information: 
consoleUserCommunicator.contact_information_regex = .+

# Student

consoleUserCommunicator.student_id = Student ID: 
consoleUserCommunicator.student_id_regex = \\d+
consoleUserCommunicator.student_name = Name: 
consoleUserCommunicator.student_name_regex = ([a-zA-Z]|\\p{Blank}|'|´)+
consoleUserCommunicator.student_surname = Surname: 
consoleUserCommunicator.student_surname_regex = ([a-zA-Z]|\\p{Blank}|'|´)+
consoleUserCommunicator.gender = Gender: 
consoleUserCommunicator.gender_regex = m|f

consoleUserCommunicator.birth_date = Birth date: 
consoleUserCommunicator.birth_date_label = __.__.____
consoleUserCommunicator.birth_date_regex = ((0?[1-9])|((1|2)[0-9])|(3[0-1]))\\.((0?[1-9])|1[0-2])\\.((19[5-9][0-9])|(20[0-1][0-9]))

consoleUserCommunicator.citizenship = Citizenship: 
consoleUserCommunicator.citizenship_regex = ([a-zA-Z]|\\p{Blank}|\\p{Punct})+
consoleUserCommunicator.place_of_birth = Place of Birth: 
consoleUserCommunicator.place_of_birth_regex = ([a-zA-Z]|\\p{Blank}|\\p{Punct})+
consoleUserCommunicator.type_of_contract = Type of Contract: 
consoleUserCommunicator.type_of_contract_regex = stipend|payable
consoleUserCommunicator.type_of_studying = Type of Studying: 
consoleUserCommunicator.type_of_studying_regex = present|online
consoleUserCommunicator.contact_inf = Contract information: 
consoleUserCommunicator.contact_inf_regex = .+

! model.Group.java

group.null_name = Null as group name is prohibited. 
group.null_language = Null as language is prohibited. 
group.null_onlineAccess = Null as online access is prohibited. 
group.null_responsible = Null as responsible for group is prohibited. 
group.null_contactInf = Null cannot be resolved into contact information. 

#by changing regex make appropriate changes in Group.java
group.incorrect_name = Incorrect input of group name (should be one of DS|ALG|ANL). 

group.incorrect_onlineAccess = Online access input is incorrect (should be true|false). 

group.incorrect_responsible = Incorrect input of responsible for group (should be: (name surname)). 

! model.Student.java

#Null cannot be resolved into ....
student.null_name = Null cannot be resolved into student name. 
student.null_surname = Null cannot be resolved into student surname. 
student.null_gender = Null cannot be resolved to student gender. 
student.null_citizenship = Null cannot be resolved to student citizenship. 
student.null_placeOfBirth = Null cannot be resolved to student placeOfBirth. 
student.null_birthDate = Null cannot be resolved to student birth date. 
student.null_typeOfStudying = Null cannot be resolved to student type of studying. 
student.null_typeOfContract = Null cannot be resolved to student type of contract. 
student.null_contactInf = Null cannot be resolved to student contract information. 

#by changing regex check Student.java (setGender(...) method), change comment below if necessary
student.incorrect_gender = Incorrect input of gender for student (should be one of FEMALE|MALE (case irrelevant)). 

student.incorrect_typeOfContract = Incorrect input of type of contract for student (should be one of STIPEND|PAYABLE (case irrelevant)). 

student.incorrect_birthDate = Incorrect input of birth date for student (should be in format *.*.* ). 

student.incorrect_typeOfStudying = Incorrect input of type of studying for student (should be one of ONLINE|PRESENT (case irrelevant)). 

! service.GroupsService.java

groupsService.already_exist = Group already exists. 
groupsService.dont_exist = Group do not exist. 
groupsService.cannot_delete = Cannot be deleted. 
groupsService.not_valid = Group is not valid. 

! service.StudentsService.java

#group
studentsService.not_online_accessible = Group is not online accessible. 
studentsService.group_not_exist = Group do not exist. 
studentsService.group_is_full = Group is full. 

#student
studentsService.not_existing_group = Student attends not existing group. 
studentsService.not_exist = Student do not exist. 

studentsService.updating_interrupted = Updating interrupted. 
studentsService.adding_interrupted = Adding interrupted. 
studentsService.cannot_added = Student cannot be added. 
studentsService.cannot_delete = Cannot be deleted. 

! util.finder.PathFinder.java

pathFinder.null_path_dir_root = Null cannot be resolved into name or rootDirectory or paths. 
pathFinder.not_dir = Given rootDirectory is not a directory. 
pathFinder.file_not_found = File not found. 
pathFinder.return_empty_path = Return empty path. 

! util.parser.ILineParser.java

iLineParser.cannot_line_into_student = Line cannot be resolved into Student. 
iLineParser.cannot_line_into_group = Line cannot be resolved into Group. 

iLineParser.inappropriate_data = Inappropriate amount of data. 

iLineParser.null_student = Null cannot be resolved into Student. 
iLineParser.null_group = Null cannot be resolved into Group.



! util.reader.ConsoleReader.java

consoleReader.cannot_read_line = Cannot read line from console. 
consoleReader.return_empty_line = Returned empty line. 

! util.reader.FileReader.java

fileReader.not_found_readable = Readable file not found. 

fileReader.path_incorrect = Path given incorrect. 
fileReader.create_empty = Created empty list. 
fileReader.null_path = Path cannot be null. 

! util.writer.FileWriter.java

fileWriter.file_not_found = File not found. 
fileWriter.path_not_found = Path not found. 
fileWriter.line_number_incorrect = Line number is incorrect. 

